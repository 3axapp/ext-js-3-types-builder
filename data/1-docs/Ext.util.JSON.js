Ext.data.JsonP.Ext_util_JSON({ "meta": {}, "requires": [], "superclasses": [], "tagname": "class", "component": false, "uses": [], "mixins": [], "mixedInto": [], "alternateClassNames": [], "members": [{ "meta": {}, "tagname": "method", "owner": "Ext.util.JSON", "name": "decode", "id": "method-decode" }, { "meta": {}, "tagname": "method", "owner": "Ext.util.JSON", "name": "encode", "id": "method-encode" }, { "meta": { "new": true }, "tagname": "method", "owner": "Ext.util.JSON", "name": "encodeDate", "id": "method-encodeDate" }], "aliases": {}, "parentMixins": [], "autodetected": {}, "html": "<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/JSON.html#Ext-util-JSON' target='_blank'>JSON.js</a></div></pre><div class='doc-contents'><p>Modified version of Douglas Crockford\"s json.js that doesn\"t\nmess with the Object prototype\nhttp://www.json.org/js.html</p>\n        <p>Available since: <b>1.1.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-decode' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.JSON'>Ext.util.JSON</span><br/><a href='source/JSON.html#Ext-util-JSON-method-decode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.JSON-method-decode' class='name expandable'>decode</a>( <span class='pre'>json</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Decodes (parses) a JSON string to an object. ...</div><div class='long'><p>Decodes (parses) a JSON string to an object. If the JSON is invalid, this function throws a SyntaxError unless the safe option is set.</p>\n        <p>Available since: <b>1.1.0</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>json</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The JSON string</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The resulting object</p>\n</div></li></ul></div></div></div><div id='method-encode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.JSON'>Ext.util.JSON</span><br/><a href='source/JSON.html#Ext-util-JSON-method-encode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.JSON-method-encode' class='name expandable'>encode</a>( <span class='pre'>o</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Encodes an Object, Array or other value ...</div><div class='long'><p>Encodes an Object, Array or other value</p>\n        <p>Available since: <b>1.1.0</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Mixed<div class='sub-desc'><p>The variable to encode</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>The JSON string</p>\n</div></li></ul></div></div></div><div id='method-encodeDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.JSON'>Ext.util.JSON</span><br/><a href='source/JSON.html#Ext-util-JSON-method-encodeDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.JSON-method-encodeDate' class='name expandable'>encodeDate</a>( <span class='pre'>d</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"><span class='new' title='New since Ext JS 3.4.0'>&#9733;</span></span></div><div class='description'><div class='short'>Encodes a Date. ...</div><div class='long'><p>Encodes a Date. This returns the actual string which is inserted into the JSON string as the literal expression.\n<b>The returned value includes enclosing double quotation marks.</b></p>\n\n\n<p>The default return format is \"yyyy-mm-ddThh:mm:ss\".</p>\n\n\n<p>To override this:</p>\n\n\n<pre><code><a href=\"#!/api/Ext.util.JSON-method-encodeDate\" rel=\"Ext.util.JSON-method-encodeDate\" class=\"docClass\">Ext.util.JSON.encodeDate</a> = function(d) {\n    return d.format('\"Y-m-d\"');\n};\n</code></pre>\n\n        <p>Available since: <b>Ext JS 3.4.0</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>d</span> : <a href=\"#!/api/Date\" rel=\"Date\" class=\"docClass\">Date</a><div class='sub-desc'><p>The Date to encode</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>The string literal to use in a JSON string.</p>\n</div></li></ul></div></div></div></div></div></div></div>", "name": "Ext.util.JSON", "since": "1.1.0", "id": "class-Ext.util.JSON", "singleton": true, "subclasses": [], "files": [{ "filename": "JSON.js", "href": "JSON.html#Ext-util-JSON" }] });
