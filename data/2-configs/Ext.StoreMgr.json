{
  "name": "StoreMgr",
  "namespace": "Ext",
  "extends": "Ext.util.MixedCollection",
  "constructorMethod": {
    "config": [
      {
        "name": "allowFunctions?",
        "type": [
          "boolean"
        ],
        "comment": ""
      }
    ]
  },
  "properties": [],
  "methods": [
    {
      "name": "addListener<T extends IStoreMgrEvents = IStoreMgrEvents, E extends keyof T = keyof T>",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        },
        {
          "name": "handler",
          "comment": "",
          "type": [
            "T[E]"
          ]
        },
        {
          "name": "scope?",
          "comment": "",
          "type": [
            "object"
          ]
        },
        {
          "name": "options?",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    },
    {
      "name": "fireEvent<T extends IStoreMgrEvents = IStoreMgrEvents, E extends keyof T = keyof T>",
      "returnType": [
        "boolean"
      ],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        },
        {
          "name": "...args",
          "comment": "",
          "type": [
            "Parameters<T[E]>"
          ]
        }
      ]
    },
    {
      "name": "hasListener<T extends IStoreMgrEvents = IStoreMgrEvents, E extends keyof T = keyof T>",
      "returnType": [
        "boolean"
      ],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        }
      ]
    },
    {
      "name": "lookup",
      "returnType": [
        "Ext.data.Store<R>"
      ],
      "visibility": "public",
      "arguments": [
        {
          "name": "id",
          "comment": "",
          "type": [
            "string",
            "object"
          ]
        }
      ]
    },
    {
      "name": "on<T extends IStoreMgrEvents = IStoreMgrEvents, E extends keyof T = keyof T>",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        },
        {
          "name": "handler",
          "comment": "",
          "type": [
            "T[E]"
          ]
        },
        {
          "name": "scope?",
          "comment": "",
          "type": [
            "object"
          ]
        },
        {
          "name": "options?",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    },
    {
      "name": "register",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "...stores",
          "comment": "",
          "type": [
            "Ext.data.Store<R>[]"
          ]
        }
      ]
    },
    {
      "name": "removeListener<T extends IStoreMgrEvents = IStoreMgrEvents, E extends keyof T = keyof T>",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        },
        {
          "name": "handler",
          "comment": "",
          "type": [
            "T[E]"
          ]
        },
        {
          "name": "scope?",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    },
    {
      "name": "un<T extends IStoreMgrEvents = IStoreMgrEvents, E extends keyof T = keyof T>",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        },
        {
          "name": "handler",
          "comment": "",
          "type": [
            "T[E]"
          ]
        },
        {
          "name": "scope?",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    },
    {
      "name": "unregister",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "ids",
          "comment": "",
          "type": [
            "string",
            "object"
          ]
        }
      ]
    }
  ],
  "events": [
    {
      "name": "add",
      "arguments": [
        {
          "name": "index",
          "comment": "",
          "type": [
            "number"
          ]
        },
        {
          "name": "o",
          "comment": "",
          "type": [
            "object"
          ]
        },
        {
          "name": "key",
          "comment": "",
          "type": [
            "string"
          ]
        }
      ]
    },
    {
      "name": "clear",
      "arguments": []
    },
    {
      "name": "remove",
      "arguments": [
        {
          "name": "o",
          "comment": "",
          "type": [
            "object"
          ]
        },
        {
          "name": "key?",
          "comment": "",
          "type": [
            "string"
          ]
        }
      ]
    },
    {
      "name": "replace",
      "arguments": [
        {
          "name": "key",
          "comment": "",
          "type": [
            "string"
          ]
        },
        {
          "name": "oldValue",
          "comment": "",
          "type": [
            "object"
          ]
        },
        {
          "name": "newValue",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    }
  ]
}
