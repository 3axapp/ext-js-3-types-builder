{
  "name": "MultiSelectionModel",
  "namespace": "Ext.tree",
  "extends": "Ext.util.Observable",
  "constructorMethod": {
    "config": [
      {
        "name": "listeners?",
        "type": [
          "object"
        ],
        "comment": ""
      }
    ]
  },
  "properties": [
    {
      "name": "onKeyDown",
      "type": [
        "object"
      ],
      "visibility": "private",
      "comment": ""
    },
    {
      "name": "selectNext",
      "type": [
        "object"
      ],
      "visibility": "private",
      "comment": ""
    },
    {
      "name": "selectPrevious",
      "type": [
        "object"
      ],
      "visibility": "private",
      "comment": ""
    }
  ],
  "methods": [
    {
      "name": "addListener<T extends IMultiSelectionModelEvents = IMultiSelectionModelEvents, E extends keyof T = keyof T>",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        },
        {
          "name": "handler",
          "comment": "",
          "type": [
            "T[E]"
          ]
        },
        {
          "name": "scope?",
          "comment": "",
          "type": [
            "object"
          ]
        },
        {
          "name": "options?",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    },
    {
      "name": "clearSelections",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "suppressEvent",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    },
    {
      "name": "fireEvent<T extends IMultiSelectionModelEvents = IMultiSelectionModelEvents, E extends keyof T = keyof T>",
      "returnType": [
        "boolean"
      ],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        },
        {
          "name": "...args",
          "comment": "",
          "type": [
            "Parameters<T[E]>"
          ]
        }
      ]
    },
    {
      "name": "getSelectedNodes",
      "returnType": [
        "unknown[]"
      ],
      "visibility": "public",
      "arguments": []
    },
    {
      "name": "hasListener<T extends IMultiSelectionModelEvents = IMultiSelectionModelEvents, E extends keyof T = keyof T>",
      "returnType": [
        "boolean"
      ],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        }
      ]
    },
    {
      "name": "init",
      "returnType": [],
      "visibility": "private",
      "arguments": [
        {
          "name": "tree",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    },
    {
      "name": "isSelected",
      "returnType": [
        "boolean"
      ],
      "visibility": "public",
      "arguments": [
        {
          "name": "node",
          "comment": "",
          "type": [
            "TreeNode"
          ]
        }
      ]
    },
    {
      "name": "on<T extends IMultiSelectionModelEvents = IMultiSelectionModelEvents, E extends keyof T = keyof T>",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        },
        {
          "name": "handler",
          "comment": "",
          "type": [
            "T[E]"
          ]
        },
        {
          "name": "scope?",
          "comment": "",
          "type": [
            "object"
          ]
        },
        {
          "name": "options?",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    },
    {
      "name": "onNodeClick",
      "returnType": [],
      "visibility": "private",
      "arguments": [
        {
          "name": "node",
          "comment": "",
          "type": [
            "object"
          ]
        },
        {
          "name": "e",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    },
    {
      "name": "removeListener<T extends IMultiSelectionModelEvents = IMultiSelectionModelEvents, E extends keyof T = keyof T>",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        },
        {
          "name": "handler",
          "comment": "",
          "type": [
            "T[E]"
          ]
        },
        {
          "name": "scope?",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    },
    {
      "name": "select",
      "returnType": [
        "TreeNode"
      ],
      "visibility": "public",
      "arguments": [
        {
          "name": "node",
          "comment": "",
          "type": [
            "TreeNode"
          ]
        },
        {
          "name": "e?",
          "comment": "",
          "type": [
            "EventObject"
          ]
        },
        {
          "name": "keepExisting?",
          "comment": "",
          "type": [
            "boolean"
          ]
        }
      ]
    },
    {
      "name": "un<T extends IMultiSelectionModelEvents = IMultiSelectionModelEvents, E extends keyof T = keyof T>",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "eventName",
          "comment": "",
          "type": [
            "E"
          ]
        },
        {
          "name": "handler",
          "comment": "",
          "type": [
            "T[E]"
          ]
        },
        {
          "name": "scope?",
          "comment": "",
          "type": [
            "object"
          ]
        }
      ]
    },
    {
      "name": "unselect",
      "returnType": [],
      "visibility": "public",
      "arguments": [
        {
          "name": "node",
          "comment": "",
          "type": [
            "TreeNode"
          ]
        }
      ]
    }
  ],
  "events": [
    {
      "name": "selectionchange",
      "arguments": [
        {
          "name": "thisCmp",
          "comment": "",
          "type": [
            "MultiSelectionModel"
          ]
        },
        {
          "name": "nodes",
          "comment": "",
          "type": [
            "unknown[]"
          ]
        }
      ]
    }
  ]
}
